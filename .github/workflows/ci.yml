name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run test suite
    runs-on: ubuntu-latest
    timeout-minutes: 10

    # Add service containers
    services:
      postgres:
        image: postgres:15.3-alpine
        env:
          POSTGRES_DB: attendee_test
          POSTGRES_USER: attendee_test_user
          POSTGRES_PASSWORD: attendee_test_user
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          image=moby/buildkit:master
          network=host

    - name: Build and cache Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        load: true
        tags: attendee-test:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Run build script in Docker container
      env:
        POSTGRES_HOST: localhost
        REDIS_URL: redis://localhost:6379/5
        DJANGO_SETTINGS_MODULE: attendee.settings.test
      run: |
        docker run --rm \
          --network host \
          -e POSTGRES_HOST \
          -e REDIS_URL \
          -e DJANGO_SETTINGS_MODULE \
          attendee-test:latest bash -c "python init_env.py > .env && python manage.py test --keepdb bots.tests"

  lint:
    name: Run linting
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Ruff
        run: |
          ruff check .
          ruff format --check .